{"version":3,"sources":["components/Navbar.js","components/Contact.js","firebase/firebaseConfig.js","components/QuestionList.js","components/RadialChart.js","components/Report.js","components/Homepage.js","components/Question.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Navbar","classes","pickNumber","Math","floor","random","className","AppBar","position","style","background","borderBottom","Toolbar","IconButton","edge","color","aria-label","to","Contact","useState","subject","content","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","axios","method","url","data","alert","error","length","type","placeholder","maxLength","required","require","config","firebaseConfig","apiKey","process","_api","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","QuestionList","match","questions","setQuestions","loading","setLoading","questionRef","database","ref","useEffect","on","snapshot","datas","val","newState","push","filterQuestion","a","where","get","filterQuery","console","log","onClick","slice","map","key","question_id","question_title","calculator","Button","variant","RadialChart","state","setTimeout","setState","setStrokeLength","this","props","radius","progress","strokeWidth","dimension","circleRadius","min","circumference","strokeLength","classNames","viewBox","width","height","stroke","fill","cx","cy","r","strokeDasharray","strokeLinecap","transform","x","y","textAnchor","dy","fontSize","Component","defaultProps","Report","completed","correct","Homepage","Fragment","Question","questionTitle","setQuestionTitle","problemId","params","dmg","filter","question_text","hashtags","App","CssBaseline","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"oRAOMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,OAuCCK,EAnCA,WACb,IAAMC,EAAUV,IAEVW,EAAaC,KAAKC,MAAuB,KAAhBD,KAAKE,SAAkB,GAEtD,OACE,yBAAKC,UAAWL,EAAQP,MACtB,kBAACa,EAAA,EAAD,CACEC,SAAS,SACTC,MAAO,CAAEC,WAAY,UAAWC,aAAc,mBAE9C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,QACLR,UAAWL,EAAQL,WACnBmB,MAAM,UACNC,aAAW,QAEX,kBAAC,IAAD,OAGF,kBAAC,IAAD,CAAMV,UAAU,OAAOW,GAAG,KAA1B,QAGA,kBAAC,IAAD,CAAMX,UAAU,OAAOW,GAAG,YAA1B,cAIA,kBAAC,IAAD,CAAMX,UAAU,OAAOW,GAAE,0BAAqBf,IAA9C,mBCqCKgB,EAhFC,WAAO,IAAD,EACYC,mBAAS,CACvCC,QAAS,GACTC,QAAS,KAHS,mBACbC,EADa,KACHC,EADG,KAMZH,EAAqBE,EAArBF,QAASC,EAAYC,EAAZD,QAEXG,EAAW,SAACC,GAAD,OACfF,EAAY,2BAAKD,GAAN,kBAAiBG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAsBvD,OACE,6BACE,kBAAC,EAAD,MACA,yBAAKtB,UAAU,qBACb,0BAAMA,UAAU,eAAeuB,SAxBpB,SAACJ,GAChBA,EAAEK,iBAEF,IACEC,IAAM,CACJC,OAAQ,OACRC,IAAK,QACLC,KAAM,CACJd,UACAC,aAGJc,MAAM,4BACN,MAAOC,GACPD,MAAM,gBAAD,OAAiBC,EAAjB,SAWD,wBAAI9B,UAAU,iBACZ,uCARC,QAWH,wBAAIA,UAAU,oBAAd,iCACA,6BACE,yBAAKA,UAAU,gBACb,uCACA,8BAAOc,EAAQiB,OAAf,QAGF,2BACEC,KAAK,OACLC,YAAY,QACZZ,KAAK,UACLC,MAAOR,EACPI,SAAUA,EACVgB,UAAU,KACVC,UAAQ,KAGZ,6BACE,yBAAKnC,UAAU,gBACb,yCACA,8BAAOe,EAAQgB,OAAf,SAEF,2BACEC,KAAK,OACLC,YAAY,kBACZZ,KAAK,UACLC,MAAOP,EACPG,SAAUA,EACViB,UAAQ,EACRnC,UAAU,eACVkC,UAAU,SAGd,2BAAOlC,UAAU,gBAAgBgC,KAAK,SAASV,MAAM,a,mDC3E/Dc,EAAQ,KAAUC,SAElB,IAAIC,EAAiB,CACnBC,OAAQC,yfAAYC,KACpBC,WAAYF,qCACZG,YAAaH,6CACbI,UAAWJ,sBACXK,cAAeL,kCACfM,kBAAmBN,eACnBO,MAAOP,6CAGTQ,IAASC,cAAcX,GAERU,QAAf,ECgDeE,EA5DM,SAAC,GAAc,EAAZC,MAAa,IAAD,EACAtC,mBAAS,IADT,mBAC3BuC,EAD2B,KAChBC,EADgB,OAEJxC,oBAAS,GAFL,mBAE3ByC,EAF2B,KAElBC,EAFkB,KAI5BC,EAAcR,EAASS,WAAWC,IAAI,YAE5CC,qBAAU,WACRH,EAAYI,GAAG,SAAS,SAACC,GACvB,IAAIC,EAAQD,EAASE,MACjBC,EAAW,GACf,IAAK,IAAIpC,KAAQkC,EACfE,EAASC,KAAKH,EAAMlC,IAEtByB,EAAaW,GACbT,GAAW,QAEZ,IAIH,IAAMW,EAAc,uCAAG,4BAAAC,EAAA,6DACrBZ,GAAW,GADU,SAEKP,EAASS,WAAWC,IAAI,YAAYU,MAAM,aAAc,KAAM,iBAAiBC,MAFpF,OAEfC,EAFe,OAKrBC,QAAQC,IAAIF,GACZf,GAAW,GANU,2CAAH,qDASpB,OAAID,EAAgB,2CAGlB,6BACE,6BACE,4CAEA,6BACE,uCACA,8CACA,kDAEF,4BAAQmB,QAAS,kBAAMP,MAAvB,WAGDd,EAAUsB,MAAM,EAAG,IAAIC,KAAI,SAACxD,GAC3B,OACE,yBAAKyD,IAAKzD,EAAE0D,aACV,6BAAM1D,EAAE2D,gBACR,6BAAM3D,EAAE4D,gBAKd,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYxE,MAAM,WAAlC,S,iDCpDAyE,E,4MACJC,MAAQ,G,kEACa,IAAD,OAElBC,YAAW,WACT,EAAKC,SAAS,CAAEC,iBAAiB,MACjC,O,+BAEM,IACAA,EAAoBC,KAAKJ,MAAzBG,gBADD,EAUHC,KAAKC,MAPPxF,EAHK,EAGLA,UACAyF,EAJK,EAILA,OACAC,EALK,EAKLA,SACAC,EANK,EAMLA,YACAC,EAPK,EAOLA,UACAnF,EARK,EAQLA,MAIIoF,EAAehG,KAAKiG,IAAIL,EAAQ,IAChCM,EAAgB,KAAWF,EAC3BG,EAAeV,EAAmBS,EAAgB,IAAOL,EAAW,EAC1E,OACE,yBACE1F,UAAWiG,IAAW,eAAgBjG,EAAW,CAC/C,cAAgC,IAAjBgG,KAGjB,yBAAKE,QAAQ,cAAcC,MAAOP,EAAWQ,OAAQR,GACnD,4BACE5F,UAAU,qBACVqG,OAAQ,OACRV,YAAaA,EACbW,KAAK,OACLC,GAAG,KACHC,GAAG,KACHC,EAAGZ,IAEL,4BACE7F,UAAU,wBACVqG,OAAQ5F,EACRkF,YAAaA,EACbe,gBAAe,UAAKV,EAAL,YAAqBD,GACpCY,cAAc,QACdL,KAAK,OACLC,GAAG,KACHC,GAAG,KACHI,UAAW,qBACXH,EAAGZ,IAGL,0BACEgB,EAAE,MACFC,EAAE,MACFC,WAAW,SACXC,GAAG,OACHV,KAAK,QACLtG,UAAU,QANZ,YAWA,0BACE6G,EAAE,MACFC,EAAE,MACFC,WAAW,SACXT,KAAK,QACLU,GAAG,OACHC,SAAS,KACTjH,UAAU,QAET0F,GAEH,0BAAMmB,EAAE,MAAMC,EAAE,MAAMC,WAAW,SAAST,KAAK,OAAOU,GAAG,OAAOhH,UAAU,OAAOiH,SAAS,MAA1F,W,GA1EgBC,aAkF1BhC,EAAYiC,aAAe,CACzB1B,OAAQ,GACRC,SAAU,GACVC,YAAa,EACbC,UAAW,IACXnF,MAzFoB,OAmGPyE,QC7EAkC,EAtBA,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAC3B,OACE,yBAAKtH,UAAU,oBACb,kBAAC,EAAD,CAAa0F,SAAU,GAAIjF,MAAM,YACjC,yBAAKT,UAAU,iBACb,6BACE,0BAAMA,UAAU,cAAhB,aACA,0BAAMA,UAAU,WAAWqH,GAC3B,0BAAMrH,UAAU,kBAAhB,aAGF,6BACE,0BAAMA,UAAU,cAAhB,WACA,0BAAMA,UAAU,UAAUsH,GAC1B,0BAAMtH,UAAU,kBAAhB,gBCAKuH,EAZE,WACf,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,MACA,yBAAKxH,UAAU,sBACb,kBAAC,EAAD,CAAQqH,UAAW,IAAKC,QAAS,KACjC,kBAAC,EAAD,SCuCOG,EA5CE,SAAC,GAAe,IAAbtE,EAAY,EAAZA,MAAY,EACYtC,mBAAS,IADrB,mBACvB6G,EADuB,KACRC,EADQ,OAEA9G,oBAAS,GAFT,mBAEvByC,EAFuB,KAEdC,EAFc,KAI9BI,qBAAU,WACSX,EAASS,WAAWC,MAE5BE,GAAG,SAAS,SAACC,GACpB,IAAIC,EAAQD,EAASE,MACjBC,EAAW,GACf,IAAK,IAAIpC,KAAQkC,EACfE,EAASC,KAAKH,EAAMlC,IAEtB+F,EAAiB3D,GACjBT,GAAW,QAEZ,IAEH,IAAIqE,EAAY,WAEZzE,IAAOyE,EAAYzE,EAAM0E,OAAOD,WAEpC,IAAME,EAAMJ,EAAcK,QAAO,SAAC5G,GAAD,OAAOA,EAAE0D,cAAgB+C,KAE1D,OAAItE,EAAgB,2CAGlB,kBAAC,IAAMkE,SAAP,KACE,kBAAC,EAAD,MACA,yBAAKxH,UAAU,sBACb,kBAAC,EAAD,CAAQqH,UAAW,IAAKC,QAAS,KACjC,6BACE,2BAAIQ,EAAI,GAAGhD,gBACX,2BAAIgD,EAAI,GAAGE,eACX,2BAAIF,EAAI,GAAGG,UACX,kBAACjD,EAAA,EAAD,CAAQC,QAAQ,YAAYxE,MAAM,WAAlC,WCpBKyH,MAbf,WACE,OACE,kBAAC,IAAD,KACE,kBAACC,EAAA,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWf,IACjC,kBAAC,IAAD,CAAOc,KAAK,WAAWC,UAAW1H,EAASS,KAAM,QACjD,kBAAC,IAAD,CAAOgH,KAAK,sBAAsBC,UAAWb,OCHjCc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASvF,MACvB,2DCZNwF,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAxH,GACLyC,QAAQzC,MAAMA,EAAMyH,a","file":"static/js/main.317007ca.chunk.js","sourcesContent":["import AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst Navbar = () => {\n  const classes = useStyles();\n\n  const pickNumber = Math.floor((Math.random() * 1600) +1)\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        position=\"static\"\n        style={{ background: '#1d1e20', borderBottom: '2px solid grey' }}\n      >\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n\n          <Link className=\"link\" to=\"/\">\n            Home\n          </Link>\n          <Link className=\"link\" to=\"/contact\">\n            Contact Us\n          </Link>\n\n          <Link className=\"link\" to={`/problem/problem${pickNumber}`}>Random Quiz</Link>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import axios from 'axios';\nimport React, { useState } from 'react';\nimport Navbar from './Navbar';\n\nconst Contact = () => {\n  const [formData, setFormData] = useState({\n    subject: '',\n    content: '',\n  });\n\n  const { subject, content } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    try {\n      axios({\n        method: 'post',\n        url: '/send',\n        data: {\n          subject,\n          content,\n        },\n      });\n      alert('Email sent successfully!');\n    } catch (error) {\n      alert(`Email failed,${error} `);\n    }\n  };\n\n  let name = ' Jen';\n\n  return (\n    <div>\n      <Navbar></Navbar>\n      <div className=\"contact-container\">\n        <form className=\"contact-form\" onSubmit={onSubmit}>\n          <h1 className=\"contact-title\">\n            <span>Hello</span>\n            {name}\n          </h1>\n          <h3 className=\"contact-subtitle\">Feel free to ask us anything!</h3>\n          <div>\n            <div className=\"length-limit\">\n              <span>Topic</span>\n              <span>{subject.length}/30</span>\n            </div>\n\n            <input\n              type=\"text\"\n              placeholder=\"Hello\"\n              name=\"subject\"\n              value={subject}\n              onChange={onChange}\n              maxLength=\"30\"\n              required\n            />\n          </div>\n          <div>\n            <div className=\"length-limit\">\n              <span>Content</span>\n              <span>{content.length}/300</span>\n            </div>\n            <input\n              type=\"text\"\n              placeholder=\"Blah blah blah.\"\n              name=\"content\"\n              value={content}\n              onChange={onChange}\n              required\n              className=\"content-area\"\n              maxLength=\"300\"\n            />\n          </div>\n          <input className=\"submit-button\" type=\"submit\" value=\"Send\" />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Contact;\n","\nimport firebase from 'firebase'\nrequire('dotenv').config();\n\nvar firebaseConfig = {\n  apiKey: process.env._api,\n  authDomain: process.env.REACT_APP_authDomain,\n  databaseURL: process.env.REACT_APP_databaseURL,\n  projectId: process.env.REACT_APP_projectId,\n  storageBucket: process.env.REACT_APP_storageBucket,\n  messagingSenderId: process.env.REACT_APP_messagingSenderId,\n  appId: process.env.REACT_APP_appId\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase","import { Button } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport firebase from '../firebase/firebaseConfig';\n\nconst QuestionList = ({ match }) => {\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const questionRef = firebase.database().ref('problems');\n\n  useEffect(() => {\n    questionRef.on('value', (snapshot) => {\n      let datas = snapshot.val();\n      let newState = [];\n      for (let data in datas) {\n        newState.push(datas[data]);\n      }\n      setQuestions(newState);\n      setLoading(false);\n    });\n  }, []);\n\n  // Query\n\n  const filterQuestion = async() => {\n    setLoading(true);\n    const filterQuery = await firebase.database().ref('problems').where('calculator', '==', 'No Calculator').get();\n\n\n    console.log(filterQuery);\n    setLoading(false)\n  };\n\n  if (loading) return <div>Loading...</div>;\n\n  return (\n    <div>\n      <div>\n        <h1>More Filters</h1>\n\n        <div>\n          <button>All</button>\n          <button>Calculator</button>\n          <button>No Calculator</button>\n        </div>\n        <button onClick={() => filterQuestion()}>Submit</button>\n      </div>\n\n      {questions.slice(0, 10).map((e) => {\n        return (\n          <div key={e.question_id}>\n            <div>{e.question_title}</div>\n            <div>{e.calculator}</div>\n          </div>\n        );\n      })}\n\n      <Button variant=\"contained\" color=\"primary\">\n        Sub\n      </Button>\n    </div>\n  );\n};\n\nexport default QuestionList;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nconst DEFAULT_COLOR = 'red';\n\nclass RadialChart extends Component {\n  state = {};\n  componentDidMount() {\n    // For initial animation\n    setTimeout(() => {\n      this.setState({ setStrokeLength: true });\n    },1000);\n  }\n  render() {\n    const { setStrokeLength } = this.state;\n    const {\n      className,\n      radius,\n      progress,\n      strokeWidth,\n      dimension,\n      color,\n\n    } = this.props;\n\n    const circleRadius = Math.min(radius, 85);\n    const circumference = 2 * 3.14 * circleRadius;\n    const strokeLength = setStrokeLength ? (circumference / 100) * progress : 0;\n    return (\n      <div\n        className={classNames('radial-chart', className, {\n          'no-progress': strokeLength === 0,\n        })}\n      >\n        <svg viewBox=\"0 0 180 180\" width={dimension} height={dimension}>\n          <circle\n            className=\"radial-chart-total\"\n            stroke={'grey'}\n            strokeWidth={strokeWidth}\n            fill=\"none\"\n            cx=\"90\"\n            cy=\"90\"\n            r={circleRadius}\n          />\n          <circle\n            className=\"radial-chart-progress\"\n            stroke={color}\n            strokeWidth={strokeWidth}\n            strokeDasharray={`${strokeLength},${circumference}`}\n            strokeLinecap=\"round\"\n            fill=\"none\"\n            cx=\"90\"\n            cy=\"90\"\n            transform =\"rotate(-90, 90,90)\"\n            r={circleRadius}\n\n          />\n          <text\n            x=\"50%\"\n            y=\"40%\"\n            textAnchor=\"middle\"\n            dy=\".3em\"\n            fill=\"white\"\n            className=\"caps\"\n          >\n            Accuracy\n          </text>\n\n          <text\n            x=\"50%\"\n            y=\"60%\"\n            textAnchor=\"middle\"\n            fill=\"white\"\n            dy=\".3em\"\n            fontSize=\"30\"\n            className=\"bold\"\n          >\n            {progress}\n          </text>\n          <text x=\"65%\" y=\"60%\" textAnchor=\"middle\" fill=\"grey\" dy=\".3em\" className=\"bold\" fontSize=\"15\">\n            %\n          </text>\n        </svg>\n      </div>\n    );\n  }\n}\nRadialChart.defaultProps = {\n  radius: 80,\n  progress: 50,\n  strokeWidth: 5,\n  dimension: 180,\n  color: DEFAULT_COLOR,\n};\nRadialChart.propTypes = {\n  className: PropTypes.string,\n  radius: PropTypes.number,\n  strokeWidth: PropTypes.number,\n  color: PropTypes.string,\n  progress: PropTypes.number,\n  dimension: PropTypes.number,\n};\nexport default RadialChart;\n","import React from 'react';\nimport RadialChart from './RadialChart';\n\nconst Report = ({ completed, correct }) => {\n  return (\n    <div className=\"report-container\">\n      <RadialChart progress={75} color=\"#6dd5ed\" />\n      <div className=\"report-detail\">\n        <div>\n          <span className=\"caps block\">Completed</span>\n          <span className=\"number \">{completed}</span>\n          <span className=\"caps grey bold\">Problems</span>\n        </div>\n\n        <div>\n          <span className=\"caps block\">Correct</span>\n          <span className=\"number\">{correct}</span>\n          <span className=\"caps grey bold\">Problems</span>\n        </div>\n      </div>\n      \n    </div>\n  );\n};\n\nexport default Report;\n","import React from 'react';\nimport Navbar from './Navbar';\nimport QuestionList from './QuestionList';\nimport Report from './Report';\n\nconst Homepage = () => {\n  return (\n    <React.Fragment>\n      <Navbar></Navbar>\n      <div className=\"homepage-container\">\n        <Report completed={100} correct={75}></Report>\n        <QuestionList></QuestionList>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Homepage;\n","import { Button } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport firebase from '../firebase/firebaseConfig';\nimport Navbar from './Navbar';\nimport Report from './Report';\n\nconst Question = ({ match }) => {\n  const [questionTitle, setQuestionTitle] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const titleRef = firebase.database().ref();\n\n    titleRef.on('value', (snapshot) => {\n      let datas = snapshot.val();\n      let newState = [];\n      for (let data in datas) {\n        newState.push(datas[data]);\n      }\n      setQuestionTitle(newState);\n      setLoading(false);\n    });\n  }, []);\n\n  let problemId = 'problem1';\n\n  if (match) problemId = match.params.problemId;\n\n  const dmg = questionTitle.filter((e) => e.question_id === problemId);\n\n  if (loading) return <div>Loading...</div>;\n\n  return (\n    <React.Fragment>\n      <Navbar></Navbar>\n      <div className=\"homepage-container\">\n        <Report completed={100} correct={75}></Report>\n        <div>\n          <p>{dmg[0].question_title}</p>\n          <p>{dmg[0].question_text}</p>\n          <p>{dmg[0].hashtags}</p>\n          <Button variant=\"contained\" color=\"primary\">\n            Sub\n          </Button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Question;\n","import CssBaseline from '@material-ui/core/CssBaseline';\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Contact from './components/Contact';\nimport Homepage from './components/Homepage';\nimport Question from './components/Question';\n\nfunction App() {\n  return (\n    <Router>\n      <CssBaseline></CssBaseline>\n      <Switch>\n        <Route exact path=\"/\" component={Homepage}></Route>\n        <Route path=\"/contact\" component={Contact} name={'Jen'}></Route>\n        <Route path=\"/problem/:problemId\" component={Question}></Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}